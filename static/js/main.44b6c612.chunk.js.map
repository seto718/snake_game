{"version":3,"sources":["conponents/Navigation.jsx","conponents/Field.jsx","conponents/Button.jsx","conponents/ManipulationPanel.jsx","utils/index.js","App.js","reportWebVitals.js","index.js"],"names":["Navigation","length","difficulty","onChangeDifficulty","upVisibility","downVisibility","className","onClick","Field","fields","map","row","column","index","Button","status","onStart","onStop","onRestart","ManipulationPanel","onChange","icon","faArrowLeft","faArrowUp","faArrowDown","faArrowRight","getFoodPosition","fieldSize","excludes","x","Math","floor","random","y","some","item","getSnakePosition","initFields","snake","i","cols","Array","fill","push","food","initialPosition","initialValues","Difficulty","GameStatus","Object","freeze","init","playing","suspended","gameover","Direction","up","right","left","down","OppositeDirection","Delta","DirectionKeyCodeMap","timer","undefined","unsubscribe","clearInterval","App","useState","setFields","body","setBody","setStatus","tick","setTick","direction","setDirection","setDifficulty","snakePosition","setSnakePosition","useEffect","setInterval","handleMoving","position","delta","newPosition","isEatingMyself","newBody","removingTrack","pop","unshift","onChangeDirection","useCallback","newDirection","handleKeyDown","e","keyCode","document","addEventListener","removeEventListener","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.44b6c612.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Navigation = ({ length, difficulty, onChangeDifficulty }) => {\r\n    const upVisibility = difficulty < 5 ? '' : 'is-hidden'\r\n    const downVisibility = difficulty > 1 ? '' : 'is-hidden'\r\n    const onUpDifficulty = () => onChangeDifficulty(difficulty + 1)\r\n    const onDownDifficulty = () => onChangeDifficulty(difficulty - 1)\r\n\r\n    return (\r\n        <div className=\"navigation\">\r\n            <div className=\"navigation-item\">\r\n                <span className=\"navigation-label\">Length: </span>\r\n                <div className=\"navigation-item-number-container\">\r\n                    <div className=\"num-board\">{length}</div>\r\n                </div>\r\n            </div>\r\n            <div className=\"navigation-item\">\r\n                <span className=\"navigation-label\">Difficulty: </span>\r\n                <div className=\"navigation-item-number-container\">\r\n                    <span className=\"num-board\">{difficulty}</span>\r\n                    <div className=\"difficulty-button-container\">\r\n                        <div className={`difficulty-button difficulty-up ${upVisibility}`}\r\n                            onClick={onUpDifficulty}\r\n                        ></div>\r\n                        <div className={`difficulty-button difficulty-down ${downVisibility}`}\r\n                            onClick={onDownDifficulty}\r\n                        ></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\nexport default Navigation;","import React from \"react\";\r\n\r\nconst Field = ({fields}) => {\r\n    return(\r\n        <div className=\"field\">\r\n            {\r\n                fields.map((row) => {\r\n                    return row.map((column,index) => {\r\n                        return <div className={`dots ${column}`} key={index}></div>\r\n                    })\r\n                })\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Field;","import React from \"react\";\r\n\r\nconst Button = ({ status, onStart, onStop, onRestart }) =>{\r\n    return (\r\n        <div className=\"button\">\r\n            {status === \"gameover\" &&<button className=\"btn btn-gameover\" onClick={onRestart}>gameover</button>}\r\n            {status === \"playing\" && <button className=\"btn btn-playing\" onClick={onStop}>stop</button>}\r\n            {status === \"init\" && <button className=\"btn btn-init\" onClick={onStart}>start</button>}\r\n            {status === \"suspended\" && <button className=\"btn btn-suspended\" onClick={onStart}>start</button>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Button;","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {\r\n    faArrowLeft,\r\n    faArrowUp,\r\n    faArrowDown,\r\n    faArrowRight\r\n}from '@fortawesome/free-solid-svg-icons'\r\n\r\nconst ManipulationPanel = ({ onChange }) =>{\r\n    const onUp = () => onChange('up')\r\n    const onRight = () => onChange('right')\r\n    const onLeft = () => onChange('left')\r\n    const onDown = () => onChange('down')\r\n    \r\n\r\n    return (\r\n        <div className='manipulation-panel'>\r\n            <button className=\"manipulation-btn btn btn-left\" onClick={onLeft}>\r\n                <FontAwesomeIcon icon={faArrowLeft} />\r\n            </button>\r\n            <div>\r\n                <button className=\"manipulation-btn btn btn-up\" onClick={onUp}>\r\n                    <FontAwesomeIcon icon={faArrowUp} />\r\n                </button>\r\n                <button className=\"manipulation-btn btn btn-down\" onClick={onDown}>\r\n                    <FontAwesomeIcon icon={faArrowDown} />\r\n                </button>\r\n            </div>\r\n            <button className=\"manipulation-btn btn btn-right\" onClick={onRight}>\r\n                <FontAwesomeIcon icon={faArrowRight} />\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport default ManipulationPanel;","export const getFoodPosition = (fieldSize, excludes) => {\r\n  while(true){\r\n    const x = Math.floor(Math.random() * (fieldSize - 1 - 1)) + 1;\r\n    const y = Math.floor(Math.random() * (fieldSize - 1 - 1)) + 1;\r\n    const conflict = excludes.some((item) => item.x === x && item.y === y)\r\n    if(!conflict){\r\n      return {x,y};\r\n    }\r\n  }\r\n}\r\n\r\nexport const getSnakePosition = (fieldSize) => {\r\n  const snake_x = Math.floor(Math.random() * (fieldSize - 1 - 1)) + 1;\r\n  const snake_y = Math.floor(Math.random() * (fieldSize - 1 - 1)) + 1;\r\n  const initialPosition = {x:snake_x, y:snake_y}\r\n  return initialPosition\r\n}\r\n\r\nexport const initFields = (fieldSize, snake) => {\r\n    const fields = [];\r\n    \r\n\r\n    for(let i=0; i<fieldSize; i++){\r\n      const cols = new Array(fieldSize).fill('')\r\n      fields.push(cols)\r\n    }\r\n    fields[snake.y][snake.x] = 'snake'\r\n    const food = getFoodPosition(fieldSize, [snake])\r\n    fields[food.y][food.x] = 'food'\r\n    return fields\r\n}","import React, { useCallback, useEffect, useState} from 'react';\nimport Navigation from './conponents/Navigation';\nimport Field from './conponents/Field';\nimport Button from './conponents/Button';\nimport ManipulationPanel from './conponents/ManipulationPanel';\nimport {initFields, getFoodPosition,getSnakePosition } from './utils';\n\nconst initialPosition = getSnakePosition(35)\nconst initialValues = initFields(35, initialPosition)\nconst defaultInterval = 100\nconst defaultdifficulty = 3\nconst Difficulty=[ 1000, 500, 100, 50, 10]\n\n\nconst GameStatus = Object.freeze({\n  init: 'init',\n  playing: 'playing',\n  suspended: 'suspended',\n  gameover: 'gameover'\n})\n\nconst Direction = Object.freeze({\n  up: 'up',\n  right: 'right',\n  left: 'left',\n  down: 'down'\n})\n\nconst OppositeDirection = Object.freeze({\n  up: 'up',\n  right: 'right',\n  left: 'left',\n  down: 'down'\n})\n\nconst Delta = Object.freeze({\n  up:{x: 0, y: -1},\n  right:{x: 1, y: 0},\n  left:{x: -1, y: 0},\n  down:{x: 0, y: 1}\n})\n\nconst DirectionKeyCodeMap = Object.freeze({\n  37: Direction.left,\n  38: Direction.up,\n  39: Direction.right,\n  40: Direction.down\n})\n\n\nlet timer = undefined\n\n//タイマーが必要なくなったら削除するための関数\nconst unsubscribe = () => {\n  if(!timer) {\n    return\n  }\n  clearInterval(timer)\n}\n\n//壁にぶち当たったらfalseを返す関数\nconst isCollision = (fieldSize,position) => {\n  if(position.y < 0 || position.x < 0){\n    return true;\n  }\n\n  if(position.y > fieldSize - 1 || position.x > fieldSize -1 ){\n    return true;\n  }\n  return false;\n};\n\nconst isEatingMyself = (fields, position) => {\n  return fields[position.y][position.x] === 'snake'\n}\n\n\n\n\nfunction App() {\n\n  const [fields, setFields] = useState(initialValues)\n  const [body, setBody] = useState([])\n  const [status, setStatus] = useState(GameStatus.init)\n  const [tick, setTick] = useState(0)\n  const [direction, setDirection] = useState(Direction.up)\n  const [difficulty, setDifficulty] = useState(defaultdifficulty)\n  const [snakePosition, setSnakePosition] = useState(initialPosition)\n\n  const onStart = () => setStatus(GameStatus.playing)\n  const onStop = () => setStatus(GameStatus.suspended)\n\n  const onRestart = () => {\n    timer = setInterval(() => {\n      setTick(tick => tick + 1)\n    }, defaultInterval)\n\n    setStatus(GameStatus.init)\n    const snakePosition = getSnakePosition(fields.length)\n    setSnakePosition(snakePosition)\n    setDirection(Direction.up)\n    setFields(initFields(fields.length,snakePosition))\n    setBody([snakePosition])\n    setDifficulty(defaultdifficulty)\n  }\n\n  useEffect(() => {\n    if(status === GameStatus.init){\n        setBody([snakePosition])\n      \n      //テスト用ヘビの初期の長さ調整\n      // setBody(\n      //   new Array(15).fill('').map((_item,index) => ({x:17,y:17 + index})),\n      // )\n      const interval = Difficulty[difficulty - 1]\n      timer = setInterval(() => {\n        setTick(tick => tick + 1)\n      }, interval)\n      return unsubscribe\n    }else if(status === GameStatus.suspended){\n\n      const interval = Difficulty[difficulty - 1]\n      timer = setInterval(() => {\n        setTick(tick => tick + 1)\n      }, interval)\n      return unsubscribe\n    }\n    \n  },[difficulty],status,snakePosition)\n\n  useEffect(() => {\n    if(!body.length === 0 || status !== GameStatus.playing){\n      return\n    }\n    const canContinue = handleMoving()\n\n    if (!canContinue){\n      unsubscribe()\n      setStatus(GameStatus.gameover)\n    }\n  },[tick])\n\n  //ヘビが進行する関数\n  const handleMoving = () => {\n    const {x, y} = body[0]\n    const delta = Delta[direction]\n    const newPosition = {\n      x: x+delta.x,\n      y: y+delta.y\n    }\n\n    if(isCollision(fields.length, newPosition) || isEatingMyself(fields, newPosition)){\n      unsubscribe()\n      return false\n    }\n    const newBody =[...body]\n    if(fields[newPosition.y][newPosition.x] !== 'food'){\n      const removingTrack = newBody.pop()\n      fields[removingTrack.y][removingTrack.x] = ''\n    } else{\n      const food = getFoodPosition(fields.length, [...newBody, newPosition])\n      fields[food.y][food.x] = 'food'\n    }\n    \n    fields[newPosition.y][newPosition.x] = 'snake'\n    newBody.unshift(newPosition)\n    setBody(newBody)\n\n    setFields(fields)\n    return true\n  }\n\n  //キー操作で方向転換\n  const onChangeDirection = useCallback((newDirection) =>{\n      if(status !== GameStatus.playing) {\n        return direction\n      }\n\n      // ここから自分実装\n      if((OppositeDirection[direction] === 'up' && newDirection === 'down')||(OppositeDirection[direction] === 'down' && newDirection === 'up')){\n        return direction\n      }else if((OppositeDirection[direction] === 'left' && newDirection === 'right')||(OppositeDirection[direction] === 'right' && newDirection === 'left')){\n        return direction\n      }\n      //\n\n\n      if(OppositeDirection[direction] === newDirection){\n        return\n      }\n      setDirection(newDirection)\n    },[direction,status]\n  )\n\n  const onChangeDifficulty = useCallback((difficulty) => {\n    \n    if(status === GameStatus.suspended){\n      if(difficulty < 1 || difficulty > difficulty.length){\n        return\n      }\n      setDifficulty(difficulty)\n    }\n\n    //なぜかここにsuspendedの場合も追加しようとしても通ってしまう\n    if(status !== GameStatus.init){\n      // console.log('aaa')\n      return\n    }\n    if(difficulty < 1 || difficulty > difficulty.length){\n      return\n    }\n    setDifficulty(difficulty)\n  },[status, difficulty])\n\n  useEffect(() => {\n    const handleKeyDown = (e) => {\n      const newDirection = DirectionKeyCodeMap[e.keyCode];\n      if(!newDirection){\n        return;\n      }\n      onChangeDirection(newDirection);\n    };\n    document.addEventListener('keydown',handleKeyDown);\n    return () => document.removeEventListener('keydown',handleKeyDown)\n  },[onChangeDirection])\n\n\n  return (\n    <div className=\"App\">\n      <header className=\"header\">\n        <div className=\"title-container\">\n          <h1 className=\"title\">Snake Game</h1>\n        </div>\n        <Navigation\n        length={body.length}\n        difficulty={difficulty}\n        onChangeDifficulty={onChangeDifficulty}\n        />\n      </header>\n      <main className=\"main\">\n        <Field fields={fields} />\n      </main>\n      <footer className=\"footer\">\n        <Button\n          status={status}\n          onStop={onStop}\n          onStart={onStart}\n          onRestart={onRestart}\n         />\n        <ManipulationPanel onChange={onChangeDirection} />\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}