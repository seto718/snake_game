{"version":3,"sources":["utils/index.js","music/grume.mp3","music/retoro.mp3","music/gameover.mp3","constants/index.js","conponents/Navigation.jsx","conponents/Field.jsx","conponents/Button.jsx","conponents/ManipulationPanel.jsx","conponents/Player.jsx","hooks/useSnakeGame.js","img/exp1.jpg","img/exp2.jpg","conponents/popup.jsx","img/gameover1.jpg","img/gameover2.jpg","img/gameover3.jpg","img/gameover4.jpg","conponents/Gameover.jsx","App.js","reportWebVitals.js","index.js"],"names":["getFoodPosition","fieldSize","excludes","x","Math","floor","random","y","some","item","getSnakePosition","initFields","snake","fields","i","cols","Array","fill","push","food","initialPosition","initialValues","Difficulty","endsound","Howl","src","gameover_sound","loop","volume","sprite","beginning","id1","play","stop","music","grume_sound","between","id2","effect","retoro_sound","id3","GameStatus","Object","freeze","init","playing","suspended","gameover","Direction","up","right","left","down","OppositeDirection","Delta","DirectionKeyCodeMap","SoundStatus","on","off","Navigation","length","difficulty","onChangeDifficulty","upVisibility","downVisibility","className","onClick","Field","map","row","column","index","Button","status","onStart","onStop","onRestart","ManipulationPanel","onChange","icon","faArrowLeft","faArrowUp","faArrowDown","faArrowRight","Player","soundstatus","change_icon","faVolumeOff","faVolumeMute","change_class","timer","undefined","unsubscribe","clearInterval","useSnakeGame","useState","setFields","body","setBody","setStatus","tick","setTick","direction","setDirection","setDifficulty","snakePosition","setSnakePosition","setSoundStatus","gameoverstatus","setGameoverStatus","imgstatus","setImgStatus","useEffect","setInterval","handleMoving","delta","newPosition","position","isCollision","isEatingMyself","newBody","removingTrack","pop","unshift","updateDirection","useCallback","newDirection","updateDifficulty","handleKeyDown","e","keyCode","document","addEventListener","removeEventListener","changeSoundStatus","close_popup2","start","reload","imgs","exp1","style","backgroundImage","backgroundRepeat","backgroundSize","backgroundPosition","Popup","next_popup","exp2","faTimesCircle","display","faAngleDoubleRight","faAngleDoubleLeft","styles","Gameover","gameover1","gameover2","gameover3","gameover4","close","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.47f6645f.chunk.js","sourcesContent":["export const getFoodPosition = (fieldSize, excludes) => {\r\n  while(true){\r\n    const x = Math.floor(Math.random() * (fieldSize - 1 - 1)) + 1;\r\n    const y = Math.floor(Math.random() * (fieldSize - 1 - 1)) + 1;\r\n    const conflict = excludes.some((item) => item.x === x && item.y === y)\r\n    if(!conflict){\r\n      return {x,y};\r\n    }\r\n  }\r\n}\r\n\r\nexport const getSnakePosition = (fieldSize) => {\r\n  const snake_x = Math.floor(Math.random() * (fieldSize - 1 - 1)) + 1;\r\n  const snake_y = Math.floor(Math.random() * (fieldSize - 1 - 1)) + 1;\r\n  const initialPosition = {x:snake_x, y:snake_y}\r\n  return initialPosition\r\n}\r\n\r\nexport const initFields = (fieldSize, snake) => {\r\n    const fields = [];\r\n    \r\n\r\n    for(let i=0; i<fieldSize; i++){\r\n      const cols = new Array(fieldSize).fill('')\r\n      fields.push(cols)\r\n    }\r\n    fields[snake.y][snake.x] = 'snake'\r\n    const food = getFoodPosition(fieldSize, [snake])\r\n    fields[food.y][food.x] = 'food'\r\n    return fields\r\n}\r\n\r\n//壁にぶち当たったらfalseを返す関数\r\nexport const isCollision = (fieldSize,position) => {\r\n  if(position.y < 0 || position.x < 0){\r\n    return true;\r\n  }\r\n\r\n  if(position.y > fieldSize - 1 || position.x > fieldSize -1 ){\r\n    return true;\r\n  }\r\n  return false;\r\n};\r\n\r\nexport const isEatingMyself = (fields, position) => {\r\n  return fields[position.y][position.x] === 'snake'\r\n}","export default __webpack_public_path__ + \"static/media/grume.fca7230a.mp3\";","export default __webpack_public_path__ + \"static/media/retoro.6524bdeb.mp3\";","export default __webpack_public_path__ + \"static/media/gameover.f15b9471.mp3\";","// 定数定義群\r\nimport {getSnakePosition,initFields} from '../utils';\r\nimport {Howl} from 'howler';\r\nimport grume_sound from '../music/grume.mp3';\r\nimport retoro_sound from '../music/retoro.mp3';\r\nimport gameover_sound from '../music/gameover.mp3';\r\n\r\n\r\nexport const fieldSize = 35\r\nexport const initialPosition = getSnakePosition(fieldSize)\r\nexport const initialValues = initFields(fieldSize, initialPosition)\r\nexport const defaultInterval = 100\r\nexport const defaultdifficulty = 3\r\nexport const Difficulty=[ 1000, 500, 100, 50, 10]\r\n\r\nexport const endsound = new Howl({\r\n  src: gameover_sound,\r\n  loop: true,\r\n  volume: 0.6,\r\n  sprite: {\r\n      beginning: [0, 30000]\r\n  }\r\n});\r\nexport const id1 = endsound.play('beginning')\r\nendsound.stop(id1)\r\n\r\nexport const music = new Howl({\r\n  src: grume_sound,\r\n  loop: true,\r\n  volume: 0.4,\r\n  sprite: {\r\n      between: [0, 70000]\r\n  }\r\n});\r\nexport const id2 = music.play('between')\r\nmusic.stop(id2)\r\n\r\nexport const effect = new Howl({\r\n  src: retoro_sound,\r\n  loop: false,\r\n  volume: 0.4,\r\n});\r\nexport const id3 = effect.play()\r\neffect.stop(id3)\r\n\r\n\r\nexport const GameStatus = Object.freeze({\r\n  init: 'init',\r\n  playing: 'playing',\r\n  suspended: 'suspended',\r\n  gameover: 'gameover'\r\n})\r\n\r\nexport const Direction = Object.freeze({\r\n  up: 'up',\r\n  right: 'right',\r\n  left: 'left',\r\n  down: 'down'\r\n})\r\n\r\nexport const OppositeDirection = Object.freeze({\r\n  up: 'up',\r\n  right: 'right',\r\n  left: 'left',\r\n  down: 'down'\r\n})\r\n\r\nexport const Delta = Object.freeze({\r\n  up:{x: 0, y: -1},\r\n  right:{x: 1, y: 0},\r\n  left:{x: -1, y: 0},\r\n  down:{x: 0, y: 1}\r\n})\r\n\r\nexport const DirectionKeyCodeMap = Object.freeze({\r\n  37: Direction.left,\r\n  38: Direction.up,\r\n  39: Direction.right,\r\n  40: Direction.down\r\n})\r\n\r\nexport const SoundStatus = Object.freeze({\r\n  on: 'on',\r\n  off: 'off'\r\n})","import React from 'react';\r\nimport { defaultdifficulty,Difficulty } from '../constants';\r\n\r\nconst Navigation = ({ length, difficulty = defaultdifficulty, onChangeDifficulty }) => {\r\n    const upVisibility = difficulty < Difficulty.length ? '' : 'is-hidden'\r\n    const downVisibility = difficulty > 1 ? '' : 'is-hidden'\r\n    const onUpDifficulty = () => onChangeDifficulty(difficulty + 1)\r\n    const onDownDifficulty = () => onChangeDifficulty(difficulty - 1)\r\n\r\n    return (\r\n        <div className=\"navigation\">\r\n            <div className=\"navigation-item\">\r\n                <span className=\"navigation-label\">Length: </span>\r\n                <div className=\"navigation-item-number-container\">\r\n                    <div className=\"num-board\">{length}</div>\r\n                </div>\r\n            </div>\r\n            <div className=\"navigation-item\">\r\n                <span className=\"navigation-label\">Difficulty: </span>\r\n                <div className=\"navigation-item-number-container\">\r\n                    <span className=\"num-board\">{difficulty}</span>\r\n                    <div className=\"difficulty-button-container\">\r\n                        <div className={`difficulty-button difficulty-up ${upVisibility}`}\r\n                            onClick={onUpDifficulty}\r\n                        ></div>\r\n                        <div className={`difficulty-button difficulty-down ${downVisibility}`}\r\n                            onClick={onDownDifficulty}\r\n                        ></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\nexport default Navigation;","import React from \"react\";\r\n\r\nconst Field = ({fields}) => {\r\n    return(\r\n        <div className=\"field\">\r\n            {\r\n                fields.map((row) => {\r\n                    return row.map((column,index) => {\r\n                        return <div className={`dots ${column}`} key={index}></div>\r\n                    })\r\n                })\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Field;","import React from \"react\";\r\nimport { GameStatus } from \"../constants\";\r\n\r\nconst Button = ({ status, onStart, onStop, onRestart }) =>{\r\n    return (\r\n        <div className=\"button\">\r\n            {status === GameStatus.gameover &&<button className=\"btn btn-gameover\" onClick={onRestart}>gameover</button>}\r\n            {status === GameStatus.playing && <button className=\"btn btn-playing\" onClick={onStop}>stop</button>}\r\n            {status === GameStatus.init && <button className=\"btn btn-init\" onClick={onStart}>start</button>}\r\n            {status === GameStatus.suspended && <button className=\"btn btn-suspended\" onClick={onStart}>start</button>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Button;","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {\r\n    faArrowLeft,\r\n    faArrowUp,\r\n    faArrowDown,\r\n    faArrowRight\r\n}from '@fortawesome/free-solid-svg-icons';\r\nimport {Direction} from '../constants';\r\n\r\nconst ManipulationPanel = ({ onChange }) =>{\r\n    const onUp = () => onChange(Direction.up)\r\n    const onRight = () => onChange(Direction.right)\r\n    const onLeft = () => onChange(Direction.left)\r\n    const onDown = () => onChange(Direction.down)\r\n    \r\n\r\n    return (\r\n        <div className='manipulation-panel'>\r\n            <button className=\"manipulation-btn btn btn-left\" onClick={onLeft}>\r\n                <FontAwesomeIcon icon={faArrowLeft} />\r\n            </button>\r\n            <div>\r\n                <button className=\"manipulation-btn btn btn-up\" onClick={onUp}>\r\n                    <FontAwesomeIcon icon={faArrowUp} />\r\n                </button>\r\n                <button className=\"manipulation-btn btn btn-down\" onClick={onDown}>\r\n                    <FontAwesomeIcon icon={faArrowDown} />\r\n                </button>\r\n            </div>\r\n            <button className=\"manipulation-btn btn btn-right\" onClick={onRight}>\r\n                <FontAwesomeIcon icon={faArrowRight} />\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport default ManipulationPanel;","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {\r\n    faVolumeOff,\r\n    faVolumeMute\r\n}from '@fortawesome/free-solid-svg-icons';\r\n\r\n\r\nconst Player = ({soundstatus,onChange,id1,id2}) => {\r\n\r\n    const change_status =() => onChange(soundstatus,id1,id2)\r\n    const change_icon = soundstatus === \"on\" ? faVolumeOff : faVolumeMute;\r\n    const change_class = soundstatus === \"on\" ? `music-btn btn sound-btn` : `music-btn-mute btn sound-btn`;\r\n\r\n    \r\n    return (\r\n        <button className={change_class} onClick={change_status}>\r\n            <FontAwesomeIcon icon={change_icon} />\r\n        </button>\r\n    )\r\n}\r\n\r\n\r\nexport default Player;","import React, { useCallback, useEffect, useState} from 'react';\r\nimport {initFields, getFoodPosition,getSnakePosition,isCollision,isEatingMyself } from '../utils';\r\nimport {\r\n    initialPosition,\r\n    defaultInterval,\r\n    defaultdifficulty,\r\n    initialValues,\r\n    Difficulty,\r\n    GameStatus,\r\n    Direction,\r\n    OppositeDirection,\r\n    Delta,\r\n    DirectionKeyCodeMap,\r\n    SoundStatus,\r\n    endsound,\r\n    music,\r\n    effect,\r\n    id1,\r\n    id2,\r\n    id3\r\n} from '../constants';\r\n\r\n\r\nlet timer = undefined\r\n\r\n//タイマーが必要なくなったら削除するための関数\r\nconst unsubscribe = () => {\r\n    if(!timer) {\r\n        return\r\n    }\r\n    clearInterval(timer)\r\n}\r\n\r\nconst useSnakeGame = () => {\r\n\r\n    const [fields, setFields] = useState(initialValues)\r\n    const [body, setBody] = useState([])\r\n    const [status, setStatus] = useState(GameStatus.init)\r\n    const [tick, setTick] = useState(0)\r\n    const [direction, setDirection] = useState(Direction.up)\r\n    const [difficulty, setDifficulty] = useState(defaultdifficulty)\r\n    const [snakePosition, setSnakePosition] = useState(initialPosition)\r\n    const [soundstatus, setSoundStatus] = useState('on')\r\n    const [gameoverstatus,setGameoverStatus] = useState(0)\r\n    const [imgstatus,setImgStatus] = useState('')\r\n\r\n    const start = () => {\r\n        setStatus(GameStatus.playing)\r\n        if(soundstatus !== SoundStatus.off){\r\n            if(music.playing(id2) === false){\r\n                music.play(id2)\r\n            }\r\n        }\r\n    }\r\n    const stop = () => {setStatus(GameStatus.suspended)}\r\n\r\n    const reload = () => {\r\n        timer = setInterval(() => {\r\n        setTick(tick => tick + 1)\r\n        }, defaultInterval)\r\n\r\n        setStatus(GameStatus.init)\r\n        const snakePosition = getSnakePosition(fields.length)\r\n        setSnakePosition(snakePosition)\r\n        setDirection(Direction.up)\r\n        setFields(initFields(fields.length,snakePosition))\r\n        setBody([snakePosition])\r\n        setDifficulty(defaultdifficulty)\r\n        endsound.stop(id1)\r\n        \r\n    }\r\n\r\n    \r\n\r\n    useEffect(() => {\r\n        if(status === GameStatus.init){\r\n            setBody([snakePosition])\r\n        //テスト用ヘビの初期の長さ調整\r\n        // setBody(\r\n        //   new Array(15).fill('').map((_item,index) => ({x:17,y:17 + index})),\r\n        // )\r\n        const interval = Difficulty[difficulty - 1]\r\n        timer = setInterval(() => {\r\n            setTick(tick => tick + 1)\r\n        }, interval)\r\n        return unsubscribe\r\n        }else if(status === GameStatus.suspended){\r\n\r\n        const interval = Difficulty[difficulty - 1]\r\n        timer = setInterval(() => {\r\n            setTick(tick => tick + 1)\r\n        }, interval)\r\n        return unsubscribe\r\n        }\r\n    },[difficulty],status,snakePosition)\r\n\r\n    useEffect(() => {\r\n        if(!body.length === 0 || status !== GameStatus.playing){\r\n            return\r\n        }\r\n        const canContinue = handleMoving()\r\n        \r\n        if (!canContinue){\r\n            unsubscribe()\r\n            if(soundstatus !== SoundStatus.off){\r\n                effect.play(id3)\r\n                if(music.playing(id2) == true){\r\n                    music.stop(id2)\r\n                }\r\n                endsound.play(id1)\r\n            }\r\n            setStatus(GameStatus.gameover)\r\n            const gameoverlevel = () => {\r\n                return body.length > 60 ? 4\r\n                : body.length <= 60 && body.length > 40 ? 3\r\n                : body.length <= 40 && body.length > 20 ? 2\r\n                : body.length <= 20 && body.length >= 1 ? 1\r\n                : 0;\r\n            }\r\n            setGameoverStatus(gameoverlevel())\r\n            setImgStatus(0)\r\n\r\n        }\r\n    },[tick])\r\n\r\n    //ヘビが進行する関数\r\n    const handleMoving = () => {\r\n        const {x, y} = body[0]\r\n        const delta = Delta[direction]\r\n        const newPosition = {\r\n            x: x+delta.x,\r\n            y: y+delta.y\r\n        }\r\n\r\n        if(isCollision(fields.length, newPosition) || isEatingMyself(fields, newPosition)){\r\n            unsubscribe()\r\n            return false\r\n        }\r\n        const newBody =[...body]\r\n        if(fields[newPosition.y][newPosition.x] !== 'food'){\r\n            const removingTrack = newBody.pop()\r\n            fields[removingTrack.y][removingTrack.x] = ''\r\n        } else{\r\n            const food = getFoodPosition(fields.length, [...newBody, newPosition])\r\n            fields[food.y][food.x] = 'food'\r\n        }\r\n        \r\n        fields[newPosition.y][newPosition.x] = 'snake'\r\n        newBody.unshift(newPosition)\r\n        setBody(newBody)\r\n\r\n        setFields(fields)\r\n        return true\r\n    }\r\n\r\n    //キー操作で方向転換\r\n    const updateDirection = useCallback((newDirection) =>{\r\n        if(status !== GameStatus.playing) {\r\n            return direction\r\n        }\r\n\r\n        // ここから自分実装\r\n        if((OppositeDirection[direction] === 'up' && newDirection === 'down')||(OppositeDirection[direction] === 'down' && newDirection === 'up')){\r\n            return direction\r\n        }else if((OppositeDirection[direction] === 'left' && newDirection === 'right')||(OppositeDirection[direction] === 'right' && newDirection === 'left')){\r\n            return direction\r\n        }\r\n        //\r\n\r\n\r\n        if(OppositeDirection[direction] === newDirection){\r\n            return\r\n        }\r\n        setDirection(newDirection)\r\n        },[direction,status]\r\n    )\r\n\r\n    const updateDifficulty = useCallback((difficulty) => {\r\n        \r\n        if(status === GameStatus.suspended){\r\n            if(difficulty < 1 || difficulty > difficulty.length){\r\n                return\r\n            }\r\n            setDifficulty(difficulty)\r\n        }\r\n\r\n        //なぜかここにsuspendedの場合も追加しようとしても通ってしまう\r\n        if(status !== GameStatus.init){\r\n            return\r\n        }\r\n        if(difficulty < 1 || difficulty > difficulty.length){\r\n            return\r\n        }\r\n        setDifficulty(difficulty)\r\n    },[status, difficulty])\r\n\r\n    useEffect(() => {\r\n        const handleKeyDown = (e) => {\r\n        const newDirection = DirectionKeyCodeMap[e.keyCode];\r\n        if(!newDirection){\r\n            return;\r\n        }\r\n        updateDirection(newDirection);\r\n        };\r\n        document.addEventListener('keydown',handleKeyDown);\r\n        return () => document.removeEventListener('keydown',handleKeyDown)\r\n    },[updateDirection])\r\n\r\n    const changeSoundStatus = useCallback((soundstatus,id1,id2) => {\r\n        \r\n        if(soundstatus === SoundStatus.on){\r\n            soundstatus = SoundStatus.off\r\n            setSoundStatus(soundstatus)\r\n            if(music.playing(id2)){\r\n                return music.stop(id2);\r\n            }else if(endsound.playing(id1)){\r\n                return endsound.stop(id1)\r\n            }else{}\r\n        }else{\r\n            soundstatus = SoundStatus.on\r\n            setSoundStatus(soundstatus)\r\n            if((music.playing(id2) === false) && (status !== GameStatus.gameover)){\r\n                return music.play(id2)\r\n            }\r\n            if(endsound.playing(id1) === false){\r\n                return endsound.play(id1);\r\n            }\r\n        }\r\n        \r\n    },[soundstatus])\r\n\r\n    //gameover後のpopup閉める処理\r\n    const close_popup2 = useCallback((imgstatus) => {\r\n        if(gameoverstatus !== 0){\r\n            imgstatus = 1\r\n            setImgStatus(imgstatus)\r\n            endsound.stop(id1)\r\n            return imgstatus\r\n        }\r\n    },[gameoverstatus])\r\n\r\n    \r\n    return {\r\n        body,\r\n        difficulty,\r\n        fields,\r\n        status,\r\n        start,\r\n        stop,\r\n        reload,\r\n        updateDirection,\r\n        updateDifficulty,\r\n        soundstatus,\r\n        changeSoundStatus,\r\n        id1,\r\n        id2,\r\n        gameoverstatus,\r\n        close_popup2,\r\n        imgstatus\r\n    };\r\n}\r\n\r\nexport default useSnakeGame;","export default __webpack_public_path__ + \"static/media/exp1.13620d33.jpg\";","export default __webpack_public_path__ + \"static/media/exp2.5062c8f9.jpg\";","import React from 'react';\r\nimport exp1 from '../img/exp1.jpg';\r\nimport exp2 from '../img/exp2.jpg';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {\r\n    faAngleDoubleRight,\r\n    faAngleDoubleLeft,\r\n    faTimesCircle\r\n}from '@fortawesome/free-solid-svg-icons';\r\n\r\n\r\nlet imgs = exp1\r\nlet style = {\r\n    backgroundImage: `url(${imgs})`,\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundSize: 'cover',\r\n    backgroundPosition: 'center'\r\n}\r\n\r\nconst Popup = () => {\r\n\r\n    const first_arrow_icon = () => {\r\n        if(imgs === exp1 ){\r\n            return <FontAwesomeIcon icon={faAngleDoubleRight} className=\"arrow_icon\" onClick={next_popup} />\r\n        }else{\r\n            return <FontAwesomeIcon icon={faAngleDoubleLeft} className={`arrow_icon arrow_icon_left`} onClick={next_popup} />\r\n        }\r\n    }\r\n\r\n    const next_popup = () => {\r\n\r\n        if (imgs === exp1){\r\n            imgs = exp2\r\n            style = {\r\n                backgroundImage: `url(${imgs})`,\r\n                backgroundRepeat: 'no-repeat',\r\n                backgroundSize: 'cover',\r\n                backgroundPosition: 'center',\r\n            }\r\n        }else{\r\n            imgs = exp1\r\n            style = {\r\n                backgroundImage: `url(${imgs})`,\r\n                backgroundRepeat: 'no-repeat',\r\n                backgroundSize: 'cover',\r\n                backgroundPosition: 'center',\r\n            }\r\n        }\r\n    }\r\n\r\n    const close_popup = () => {\r\n        style = {\r\n            display: 'none'\r\n        }\r\n    }\r\n\r\n    const text = () => {\r\n        if(imgs === exp1){\r\n            return <p className=\"text-box\">やあ！スネークゲームにようこそ！<br />このゲームはぼくを食べ物のところに連れて行って大きくしていくゲームだよ。<br />沢山食べて大きくしてね！<br />矢印ボタンを押してゲーム説明を読んでね</p>\r\n        }\r\n        if(imgs === exp2){\r\n            return <p className=\"text-box2\">Startボタンを押したら白いドットが動き出すよ。<br />矢印キーで操作してピンクのエサまで連れて行こう！<br />右上の難易度によってへびの速さが変わるよ。<br />へびをより長く出来るように頑張ってね！</p>\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='popup_image' style={style}>\r\n            {text()}\r\n            <FontAwesomeIcon icon={faTimesCircle} className=\"close_icon\" onClick={close_popup} />\r\n            {first_arrow_icon()}\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Popup;","export default __webpack_public_path__ + \"static/media/gameover1.0cbdf882.jpg\";","export default __webpack_public_path__ + \"static/media/gameover2.8a0b590d.jpg\";","export default __webpack_public_path__ + \"static/media/gameover3.38425739.jpg\";","export default __webpack_public_path__ + \"static/media/gameover4.3b645634.jpg\";","import React from 'react';\r\nimport gameover1 from '../img/gameover1.jpg';\r\nimport gameover2 from '../img/gameover2.jpg';\r\nimport gameover3 from '../img/gameover3.jpg';\r\nimport gameover4 from '../img/gameover4.jpg';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {\r\n    faTimesCircle\r\n}from '@fortawesome/free-solid-svg-icons';\r\nimport { GameStatus } from \"../constants\";\r\n\r\n\r\nlet imgs =\"\"\r\nlet styles = {display: 'none'}\r\n\r\nconst Gameover = ({ gameoverstatus, status, close_popup2,imgstatus }) => {\r\n    \r\n    const close_popup_img =() => close_popup2(imgstatus)\r\n    if(status === GameStatus.gameover){\r\n        imgs = gameoverstatus === 1 ? gameover1 : gameoverstatus === 2 ? gameover2 : gameoverstatus === 3 ? gameover3 : gameoverstatus === 4 ? gameover4 : '';\r\n        styles = {\r\n            backgroundImage: `url(${imgs})`,\r\n            backgroundRepeat: 'no-repeat',\r\n            backgroundSize: 'cover',\r\n            backgroundPosition: 'center',\r\n        }\r\n    }\r\n    let close = imgstatus === 1 && 'close';\r\n    \r\n    return(\r\n        <div className={`popup_image2 pop_opacity ${close}`} style={styles}>\r\n            <FontAwesomeIcon icon={faTimesCircle} className={`close_icon close_icon2`} onClick={close_popup_img} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Gameover;","import React from 'react';\nimport Navigation from './conponents/Navigation';\nimport Field from './conponents/Field';\nimport Button from './conponents/Button';\nimport ManipulationPanel from './conponents/ManipulationPanel';\nimport Player from './conponents/Player';\nimport useSnakeGame from './hooks/useSnakeGame';\nimport Popup from './conponents/popup';\nimport Gameover from './conponents/Gameover';\n\n\nfunction App() {\n\n  const {\n    body,\n    difficulty,\n    fields,\n    start,\n    stop,\n    reload,\n    status,\n    updateDirection,\n    updateDifficulty,\n    soundstatus,\n    changeSoundStatus,\n    id1,\n    id2,\n    gameoverstatus,\n    close_popup2,\n    imgstatus\n  } = useSnakeGame()\n\n  return (\n    <div className=\"App\">\n      <Gameover\n        gameoverstatus = {gameoverstatus}\n        status = {status}\n        close_popup2 = {close_popup2}\n        imgstatus = {imgstatus}\n      />\n      <Popup />\n      <header className=\"header\">\n        <div className=\"title-container\">\n          <h1 className=\"title\">Snake Game</h1>\n          <Player\n            soundstatus={soundstatus}\n            onChange={changeSoundStatus}\n            id1={id1}\n            id2={id2}\n          />\n        </div>\n        <Navigation\n        length={body.length}\n        difficulty={difficulty}\n        onChangeDifficulty={updateDifficulty}\n        />\n      </header>\n      <main className=\"main\">\n        <Field fields={fields} />\n      </main>\n      <footer className=\"footer\">\n        <Button\n          status={status}\n          onStop={stop}\n          onStart={start}\n          onRestart={reload}\n         />\n        <ManipulationPanel onChange={updateDirection} />\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport reactDom from 'react-dom';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}